class CfgSkeletons
{
	class Default;
	class Vehicle;
	class Plane: Vehicle
	{
		skeletonInherit="Vehicle";
		skeletonBones[]=
		{
			"alt",
			"",
			"alt2",
			"",
			"mph",
			"",
			"mph2",
			"",
			"vert_speed",
			"",
			"vert_speed2",
			"",
			"nm_alt",
			"",
			"hud_alt",
			"",
			"hud_speed",
			"",
			"rpm",
			"",
			"kompas",
			"",
			"kompas2",
			"",
			"hodinova",
			"",
			"hodinova2",
			"",
			"minutova",
			"",
			"minutova2",
			"",
			"horizont_dive",
			"",
			"horizont",
			"horizont_dive",
			"horizont_dive2",
			"",
			"horizont2",
			"horizont_dive2",
			"lkh klapka",
			"",
			"pkh klapka",
			"",
			"lkd klapka",
			"",
			"pkd klapka",
			"",
			"leva smerovka",
			"",
			"leva vejskovka",
			"",
			"prava smerovka",
			"",
			"prava vejskovka",
			"",
			"ls klapka",
			"",
			"ps klapka",
			"",
			"predni kolo",
			"",
			"levy kolo",
			"",
			"pravy kolo",
			"",
			"vrtule 1",
			"",
			"vrtule",
			"",
			"damageHide",
			""
		};
	};
	class MV22Skeleton: Plane
	{
		isDiscrete=0;
		skeletonInherit="Plane";
		skeletonBones[]=
		{
			"altB_1",
			"",
			"altR_1",
			"",
			"flapx",
			"",
			"gearx",
			"",
			"vario_3",
			"",
			"vario_1",
			"",
			"engine_3",
			"",
			"alt_3",
			"",
			"mph_3",
			"",
			"mph_1",
			"",
			"kompas_3",
			"",
			"kompas_4",
			"",
			"horizont_3",
			"",
                         "wing",
                         "",
			"engine_1",
			"wing",
			"rpm_1",
			"",
			"rpm_2",
			"",
			"fuel_1",
			"",
			"fuel_2",
			"",
			"engine_1_prop",
			"engine_1",
			"engine_2",
			"wing",
			"engine_2_prop",
			"engine_2",
                         "engine_prop_1_1a",
			"engine_1_prop",
                         "engine_prop_1_1b",
			"engine_prop_1_1a",
                         "engine_prop_1_2a",
			"engine_1_prop",
                         "engine_prop_1_2b",
			"engine_prop_1_2a",
                         "engine_prop_1_3a",
			"engine_1_prop",
                         "engine_prop_1_3b",
			"engine_prop_1_3a",
                         "engine_prop_2_1a",
			"engine_2_prop",
                         "engine_prop_2_1b",
			"engine_prop_2_1a",
                         "engine_prop_2_2a",
			"engine_2_prop",
                         "engine_prop_2_2b",
			"engine_prop_2_2a",
                         "engine_prop_2_3a",
                         "engine_2_prop",
                         "engine_prop_2_3b",
			"engine_prop_2_3a",
			"flap_1",
			"wing",
			"flap_2",
			"wing",
			"elevator",
			"",
			"rudder_1",
			"",
			"rudder_2",
			"",
			"gear_1_1",
			"",
			"gear_2_1",
			"",
			"gear_2_2",
			"",
			"gear_1_1_damper",
			"gear_1_1",
			"gear_2_1_damper",
			"gear_2_1",
			"gear_2_2_damper",
			"gear_2_2",
			"gear_1_1_stabil",
			"gear_1_1_damper",
			"gear_2_1_stabil",
			"gear_2_1_damper",
			"gear_2_2_stabil",
			"gear_2_2_damper",
			"wheel_1_1",
			"gear_1_1_damper",
			"wheel_2_1",
			"gear_2_1_damper",
			"wheel_2_2",
			"gear_2_2_damper",
			"hatch_1_1",
			"",
			"hatch_1_2",
			"",
			"hatch_2_1",
			"",
			"hatch_2_2",
			"",
			"hatch_3_1",
			"",
			"hatch_3_2",
			"",
			"door1_top",
			"",
			"door1_bottom",
			"",
			"ramp_top",
			"",
			"ramp_bottom",
			"",
			"Turret",
			"",
			"Gun",
			"Turret",
			"beaconred", "",
			"RedLight","beaconred",
			"beacongreen", "",
			"Greenlight","beacongreen",
			"display_off",""
		};
	};
};
class CfgModels
{
	class Default;
	class Vehicle;
	class Plane: Vehicle
	{
		sectionsInherit="Vehicle";
		sections[]=
		{
			"vrtule staticka",
			"vrtule blur",
			"trup",
			"zbytek"
		};
		skeletonName="Plane";
		class Animations
		{
	                class damageHide
	                {
	                        type="hide";
	                        source="damage";
	                        selection="damageHide";
	                };
                        class IndicatorAltBaro
			{
				type="rotation";
				source="altBaro";
				sourceAddress="loop";
				selection="alt";
				axis="osa_alt";
				memory=0;
				maxValue=304;
				angle1="rad -360";
			};
			class IndicatorAltBaro2: IndicatorAltBaro
			{
				selection="alt2";
				axis="osa_alt2";
			};
			class IndicatorAltRadar
			{
				type="rotation";
				source="altRadar";
				selection="nm_alt";
				axis="osa_nm_alt";
				memory="false";
				maxValue=61;
				angle1="rad -180";
			};
			class IndicatorAltRadar2: IndicatorAltRadar
			{
				selection="nm_alt2";
				axis="osa_nm_alt2";
			};
			class IndicatorSpeed
			{
				type="rotation";
				source="speed";
				selection="mph";
				axis="osa_mph";
				memory="false";
				maxValue=125;
				angle1="rad -320";
			};
			class IndicatorSpeed2: IndicatorSpeed
			{
				selection="mph2";
				axis="osa_mph2";
			};
			class IndicatorVertSpeed
			{
				type="rotation";
				source="vertSpeed";
				selection="vert_speed";
				axis="osa_vert_speed";
				minValue=-30;
				maxValue=30;
				angle1="rad -300";
			};
			class IndicatorVertSpeed2: IndicatorVertSpeed
			{
				selection="vert_speed2";
				axis="osa_vert_speed2";
			};
			class IndicatorRPM
			{
				type="rotation";
				source="rpm";
				selection="rpm";
				axis="osa_rpm";
				memory="false";
				maxValue=12;
				angle1="rad -320";
			};
			class IndicatorRPM2: IndicatorRPM
			{
				selection="rpm2";
				axis="osa_rpm2";
			};
			class IndicatorCompass
			{
				type="rotation";
				source="direction";
				selection="kompas";
				axis="osa_kompas";
				memory="false";
				minValue=-3.141593;
				maxValue=3.141593;
				angle1="rad -360";
			};
			class IndicatorCompass2: IndicatorCompass
			{
				selection="kompas2";
				axis="osa_kompas2";
			};
			class WatchHour
			{
				type="rotation";
				source="clockHour";
				selection="hodinova";
				axis="osa_time";
				memory="false";
				angle1="rad -360";
			};
			class WatchHour2: WatchHour
			{
				selection="hodinova2";
				axis="osa_time2";
			};
			class WatchMinute
			{
				type="rotation";
				source="clockMinute";
				selection="minutova";
				axis="osa_time";
				memory="false";
				angle1="rad -360";
			};
			class WatchMinute2: WatchMinute
			{
				selection="minutova2";
				axis="osa_time2";
			};
			class HorizonBank
			{
				type="rotationZ";
				source="horizonBank";
				selection="horizont";
				axis="osa_horizont";
				memory="false";
				minValue="rad -360";
				maxValue="rad +360";
				angle0="rad -360";
				angle1="rad +360";
			};
			class HorizonDive
			{
				type="rotationX";
				source="horizonDive";
				selection="horizont";
				axis="osa_horizont";
				memory="false";
				minValue="rad -360";
				maxValue="rad +360";
				angle0="rad -360";
				angle1="rad +360";
			};
			class Horizon2Bank: HorizonBank
			{
				selection="horizont2";
				axis="osa_horizont2";
			};
			class Horizon2Dive: HorizonDive
			{
				selection="horizont2";
				axis="osa_horizont2";
			};
			class FWheel
			{
				type="rotation";
				source="gear";
				selection="predni kolo";
				axis="osa predniho kola";
				minValue=-1;
				maxValue=1;
				angle0="rad -104.4";
				angle1="rad 104.4";
			};
			class LWheel: FWheel
			{
				selection="levy kolo";
				axis="osa leveho kola";
				angle0="rad -81";
				angle1="rad 81";
			};
			class RWheel: LWheel
			{
				selection="pravy kolo";
				axis="osa praveho kola";
			};
			class FWheelRot
			{
				type="rotationX";
				source="wheel";
				selection="predni kolo rot";
				axis="predni kolo rot";
				memory="false";
				minValue=0;
				maxValue=2;
				sourceAddress="loop";
				angle0=0;
				angle1="-rad 360";
			};
			class LWheelRot: FWheelRot
			{
				selection="levy kolo rot";
				axis="levy kolo rot";
				minValue=0;
				maxValue=2.300000;
			};
			class RWheelRot: LWheelRot
			{
				selection="pravy kolo rot";
				axis="pravy kolo rot";
			};
			class LFlap
			{
				type="rotation";
				source="flap";
				selection="ls klapka";
				axis="osa ls klapky";
				angle0=0;
				angle1="rad -28.6";
			};
			class RFlap
			{
				type="rotation";
				source="flap";
				selection="ps klapka";
				axis="osa ps klapky";
				angle0=0;
				angle1="rad 28.6";
			};
			class LElevator
			{
				type="rotation";
				source="elevator";
				selection="leva vejskovka";
				axis="osa leve vejskovky";
				minValue=-1;
				maxValue=1;
				angle0="rad 28.6";
				angle1="rad -28.6";
			};
			class RElevator: LElevator
			{
				selection="prava vejskovka";
				axis="osa prave vejskovky";
			};
			class LAileronT
			{
				type="rotation";
				source="aileronT";
				selection="lkh klapka";
				axis="osa lkh klapky";
				minValue=-0.500000;
				maxValue=1.400000;
				angle0=-0.500000;
				angle1=1.400000;
			};
			class RAileronT
			{
				type="rotation";
				source="aileronB";
				selection="pkh klapka";
				axis="osa pkh klapky";
				minValue=-1.400000;
				maxValue=0.500000;
				angle0=-1.400000;
				angle1=0.500000;
			};
			class LAileronB
			{
				type="rotation";
				source="aileronB";
				selection="lkd klapka";
				axis="osa lkd klapky";
				minValue=-1.400000;
				maxValue=0.500000;
				angle0=-1.400000;
				angle1=0.500000;
			};
			class RAileronB
			{
				type="rotation";
				source="aileronT";
				selection="pkd klapka";
				axis="osa pkd klapky";
				minValue=-0.500000;
				maxValue=1.400000;
				angle0=-0.500000;
				angle1=1.400000;
			};
			class LRudder
			{
				type="rotation";
				source="rudder";
				selection="leva smerovka";
				axis="osa leve smerovky";
				minValue=-1;
				maxValue=1;
				angle0="rad 22.9";
				angle1="rad -22.9";
			};
			class RRudder: LRudder
			{
				selection="prava smerovka";
				axis="osa prave smerovky";
			};
			class Rotor0
			{
				type="rotation";
				source="rotor";
				selection="vrtule";
				axis="osa vrtule";
				angle0=0;
				angle1="rad 360";
			};
			class Rotor1: Rotor0
			{
				selection="vrtule 1";
				axis="osa vrtule 1";
			};
		};
	};
	class MV22: Plane
	{
		skeletonName="MV22Skeleton";
		sectionsInherit="Plane";
		sections[]=
		{
			"engine_blur",
			"engine_static"
		};
		class Animations
		{
			class Redlight //Red
			{
				type = "Hide";
				selection = "Redlight";
				source = "time";		
				animPeriod = 0;	
				sourceAddress = "loop";
				minValue = -0.20;
				maxValue = +0.20;
				hideValue = "0.2";
			};
			class RedlightStart: Redlight
			{
				selection = "beaconred";
				source = "Redlight1";		
				sourceAddress = "clamp";
				minValue = 00.00;
				maxValue = 1.0;
				hideValue = "0.0";	
				unHideValue = "1.0";	
			};		
			class Greenlight // Green
			{	
				type = "Hide";
				selection = "Greenlight";						
				source = "time";		
				animPeriod = 0;	
				sourceAddress = "loop";
				minValue = -0.20;
				maxValue = +0.20;
				hideValue = "0.2";				
			};
			class GreenlightStart: Greenlight
			{
				selection = "beacongreen";
				source = "Greenlight1";		
				sourceAddress = "clamp";
				minValue = 00.00;
				maxValue = 1.0;
				hideValue = "0.0";	
				unHideValue = "1.0";	
			};
			class MainTurret
			{
				type="rotationY";
				source="mainTurret";
				selection="turret";
				axis="turret_axis";
				animPeriod=0;
				memory=1;
				minValue="rad -360";
				maxValue="rad +360";
				angle0="rad -360";
				angle1="rad +360";
			};
			class MainGun
			{
				type="rotationX";
				source="mainGun";
				selection="gun";
				axis="gun_axis";
				animPeriod=0;
				memory=1;
				minValue="rad -360";
				maxValue="rad +360";
				angle0="rad -360";
				angle1="rad +360";
			};
	                class damageHide
	                {
	                        type="hide";
	                        source="damage";
	                        selection="damageHide";
	                };
			class display_on
			{
				type="hide";
				source="rpm";
				selection="display_off";
				minValue=-0.5;
				maxValue=0.5;
				hidevalue=0.9;
				sourceAddress="clamp";
			};
			class IndicatorFlaps
			{
				type="translation";
				source="flap";
				selection="flapx";
				axis="gearx_axis";
				memory=1;
				minValue=0.000000;
				maxValue=0.500000;
				offset0=-10.000000;
				offset1=0.000000;
			};
			class IndicatorGear
			{
				type="translation";
				source="gear";
				selection="gearx";
				axis="gearx_axis";
				memory=1;
				minValue=0.000000;
				maxValue=1.000000;
				offset0= 0.000000;
				offset1=-10.000000;
			};
			class kompas_3
			{
				type="rotation";
				source="direction";
				selection="kompas_3";
				memory=0;
				axis="kompas_3_axis";
				minValue=-3.141593;
				maxValue=3.141593;
				angle0=0;
				angle1="+rad 360";
			};
			class kompas_4: kompas_3
			{
				selection="kompas_4";
				axis="kompas_4_axis";
				angle0=0;
				angle1="-rad 360";
			};
			class HorizonDive
			{
				type="rotationX";
				source="horizondive";
				selection="horizont_3";
				axis="horizont_3_axis";
				memory=0;
				minValue="rad -90";
				maxValue="rad 90";
				angle0=-1.570796;
				angle1=1.570796;
			};
			class HorizonBank
			{
				type="rotation";
				source="horizonBank";
				selection="horizont_3";
				axis="HorizontBank_3_axis";
				memory=0;
				minValue=-6.283190;
				maxValue=6.283190;
				angle0=-6.283185;
				angle1=6.283185;
			};
			class IndicatorSpeed3
			{
				type="rotation";
				source="speed";
				selection="mph_3";
				axis="alt_3_axis";
				memory=1;
				minValue=-18.750000*600/405;
				maxValue=112.500000*600/405;
				angle0=-0.327000/1.609344;
				angle1=1.963495/1.609344;
			};
			class IndicatorSpeed1
			{
				type="rotation";
				source="speed";
				selection="mph_1";
				axis="mph_1_axis";
				memory=1;
				minValue=0;
				maxValue=210;
				angle0=0;
				angle1=3.665000;
			};
			class IndicatorRPM1
			{
				type="rotation";
				source="rpm";
				selection="rpm_1";
				axis="rpm_1_axis";
				memory=0;
				minValue=0;
				maxValue=1;
				angle0=0;
				angle1=3.665000;
			};
			class IndicatorRPM2: IndicatorRPM1
			{
				source="rpm";
				selection="rpm_2";
				axis="rpm_2_axis";
				memory=0;
				minValue=0;
				maxValue=1;
				angle0=0;
				angle1=3.665000;
			};
			class IndicatorAltRadar3
			{
				type="rotation";
				source="altRadar";
				selection="alt_3";
				axis="alt_3_axis";
				minValue=0.000000;
				maxValue=10000.000000;
				angle0=0.000000;
				angle1=4.320000;
			};
			class IndicatorAltRadar1: IndicatorAltRadar3
			{
				source="altRadar";
				selection="altr_1";
				axis="altr_1_axis";
				angle0=0.000000;
				angle1=3.665000;
			};
			class IndicatorAltBaro1
			{
				type="rotation";
				source="altBaro";
				selection="altb_1";
				axis="altb_1_axis";
				minValue=0.000000;
				maxValue=10000.000000;
				angle0=0.000000;
				angle1=3.665000;
			};
			class IndicatorVertSpeed3
			{
				type="rotation";
				source="vertSpeed";
				selection="vario_3";
				axis="vario_3_axis";
				memory=0;
				minValue=-60.000000;
				maxValue=60.000000;
				angle0=0.506000;
				angle1=-0.506000;
			};
			class IndicatorVertSpeed1: IndicatorVertSpeed3
			{
				selection="vario_1";
				axis="vario_1_axis";
				memory=0;
				minValue=-60.000000;
				maxValue=60.000000;
				angle0=2.268928;
				angle1=-2.268928;
			};
			class IndicatorFuel1
			{
				type="rotation";
				source="fuel";
				selection="fuel_1";
				axis="fuel_1_axis";
				memory=0;
				minValue=0;
				maxValue=1;
				angle0=0;
				angle1=3.665000;
			};
			class IndicatorFuel2: IndicatorFuel1
			{
				selection="fuel_2";
				axis="fuel_2_axis";
			};
			class Flap_1
			{
				type="rotation";
				source="flap";
				selection="flap_1";
				axis="flap_1_axis";
				angle1="rad 75";
			};
			class Flap_2: Flap_1
			{
				selection="flap_2";
				axis="flap_2_axis";
				angle1="rad -75";
			};
			class ElevatorFL
			{
				type="rotation";
				source="elevator";
				selection="elevator";
				axis="elevator_axis";
				minValue=-1;
				maxValue=1;
				angle0="rad -14";
				angle1="rad 14";
			};
			class RudderL
			{
				type="rotation";
				source="rudder";
				selection="rudder_1";
				axis="rudder_1_axis";
				minValue=-1;
				maxValue=1;
				angle0="rad 22.9";
				angle1="rad -22.9";
			};
			class RudderR: RudderL
			{
				selection="rudder_2";
				axis="rudder_2_axis";
			};
			class Engine_1
			{
				type="rotation";
				source="thrustVector";
				selection="engine_1";
				axis="engine_1_axis";
				minValue=0.000000;
				maxValue=1.00000;
				angle1=0.000000;
				angle0=1.570796;
			};
			class Engine_2: Engine_1
			{
				selection="engine_2";
				axis="engine_2_axis";
				angle1=0.000000;
				angle0=-1.570796;
			};
			class Engine_3: Engine_1
			{
				source="thrustVector";
				selection="engine_3";
				axis="engine_3_axis";
				angle1=1.570796;
			};
			class Rotor_1
			{
				type="rotation";
				source="rotor";
				selection="engine_1_prop";
				axis="engine_1_prop_axis";
				angle1="rad -360";
			};
			class Rotor_2: Rotor_1
			{
				selection="engine_2_prop";
				axis="engine_2_prop_axis";
				angle1="rad 360";
			};
			class Gear_1_1_Steering
			{
				type="rotationY";
				source="rudder";
				selection="gear_1_1";
				axis="gear_1_1_steering_axis";
				memory=1;
				minValue=-9;
				maxValue=9;
				angle0="rad -45";
				angle1="rad +45";
			};
			class Gear_1_1
			{
				type="rotation";
				source="gear";
				selection="gear_1_1";
				axis="gear_1_1_axis";
				maxValue=0.700000;
				angle1="rad -90";
			};
			class Gear_2_1: Gear_1_1
			{
				selection="gear_2_1";
				axis="gear_2_1_axis";
				minValue=0.200000;
				maxValue=0.800000;
			};
			class Gear_2_2: Gear_2_1
			{
				selection="gear_2_2";
				axis="gear_2_2_axis";
				angle1="rad 90";
			};
			class Gear_1_1_Damper
			{
				type="translation";
				source="altRadar";
				selection="gear_1_1_damper";
				axis="gear_2_1_damper_axis";
				memory=1;
				/*minValue=4.300000;
				maxValue=4.500000;*/
				maxValue=0.300000;
				minValue=0.000000;
				angle0=-0.500000;
				angle1=0;
				offset0=-0.500000;
				offset1=0;
			};
			class Gear_2_1_Damper: Gear_1_1_Damper
			{
				selection="gear_2_1_damper";
				//maxValue=4.600000;

				angle0=-1.500000;
				offset0=-1.500000;
			};
			class Gear_2_2_Damper: Gear_2_1_Damper
			{
				selection="gear_2_2_damper";
			};
			class Gear_1_1_Stabil: Gear_1_1_Damper
			{
				type="rotation";
				selection="gear_1_1_stabil";
				axis="gear_1_1_stabil_axis";
				angle0=0;
				angle1="rad -20";
			};
			class Gear_2_1_Stabil: Gear_2_1_Damper
			{
				type="rotation";
				selection="gear_2_1_stabil";
				axis="gear_2_1_stabil_axis";
				angle0=0;
				angle1="rad -20";
			};
			class Gear_2_2_Stabil: Gear_2_1_Stabil
			{
				selection="gear_2_2_stabil";
			};
			class Wheel_1_1
			{
				type="rotationX";
				source="wheel";
				selection="wheel_1_1";
				axis="";
				memory=1;
				sourceAddress="loop";
				minValue=0;
				maxValue=1;
				angle0=0;
				angle1="rad -180";
			};
			class Wheel_2_1: Wheel_1_1
			{
				selection="wheel_2_1";
				axis="wheel_2_1_axis";
				angle1="rad -160";
			};
			class Wheel_2_2: Wheel_2_1
			{
				selection="wheel_2_2";
				axis="wheel_2_2_axis";
			};
			class Hatch_1_1
			{
				type="rotation";
				source="gear";
				selection="hatch_1_1";
				axis="hatch_1_1_axis";
				minValue=0.700000;
				maxValue=1;
				angle0="rad 90";
				angle1=0;
			};
			class Hatch_1_2: Hatch_1_1
			{
				selection="hatch_1_2";
				axis="hatch_1_2_axis";
				angle0="rad -90";
			};
			class Hatch_2_1: Hatch_1_1
			{
				sourceAddress="mirror";
				selection="hatch_2_1";
				axis="hatch_2_1_axis";
				minValue=0;
				maxValue=0.500000;
				angle0=0;
				angle1="rad 90";
			};
			class Hatch_2_2: Hatch_2_1
			{
				selection="hatch_2_2";
				axis="hatch_2_2_axis";
				angle1="rad -90";
			};
			class Hatch_3_1: Hatch_1_1
			{
				selection="hatch_3_1";
				axis="hatch_3_1_axis";
				angle0=-1.570796;
				angle1=0.000000;
			};
			class Hatch_3_2: Hatch_3_1
			{
				selection="hatch_3_2";
				axis="hatch_3_2_axis";
				angle0="rad 90";
			};
			class door1_top
			{
				type="rotation";
				source="door_1_1";
				selection="door1_top";
				axis="door1_top_axis";
				angle1=1.221730;
			};
			class door1_bottom
			{
				type="rotation";
				source="door_1_1";
				selection="door1_bottom";
				axis="door1_bottom_axis";
				minValue=0.200000;
				angle1=-2.356194;
			};
			class ramp_bottom
			{
				type="rotation";
				source="ramp";
				selection="ramp_bottom";
				axis="ramp_bottom_axis";
				minValue=0.200000;
				angle1=-0.798132;
			};
			class ramp_top
			{
				type="rotation";
				source="ramp";
				selection="ramp_top";
				axis="ramp_top_axis";
				minValue=0.200000;
				angle1=0.436332;
			};
                         // packing animations

		      class pack_engine_1
			{
				type="rotation";
				source="pack_engine_1";
				selection="engine_1";
				axis="engine_1_axis";
				minValue=0.200000;
                                 maxValue=0.400000;
				angle1=90*3.141562653/180;
			};
		      class pack_engine_2: pack_engine_1
			{
				type="rotation";
				selection="engine_2";
                                 source="pack_engine_2";
				axis="engine_2_axis";
				angle1=-90*3.141562653/180;
			};
		      class turn_wing: pack_engine_1
			{
				type="rotation";
				source="turn_wing";
				selection="wing";
				axis="wing_axis";
				minValue=0.400000;
                                 maxValue=1.00000;
				angle1=90*3.141562653/180;
			}; 
		};
	};
};